api:
    resources:
        Pintushi\Bundle\OrganizationBundle\Entity\Organization:
            scope: pintushi_organization
            normalization_context:
                groups: [Organization]
            validation_groups:  ["pintushi"]
            route_prefix: /admin
            form: Pintushi\Bundle\OrganizationBundle\Form\Type\OrganizationType
            repository_class: 'Pintushi\Bundle\OrganizationBundle\Repository\OrganizationRepository'
            operations:
                create:
                    access_control: is_granted('pintushi_organization_create')
                update:
                    access_control: is_granted('pintushi_organization_update', object)
                index:
                    grid: organization-grid
                    access_control: is_granted('pintushi_organization_view')
                    normalization_context:
                        groups: [Organization, Default]
                view:
                    access_control: is_granted('pintushi_organization_view', object)
                delete:
                    access_control: is_granted('pintushi_organization_delete', object)
                select_organization:
                    action: view
                    route_name: 'api_organizations_select_organization'
                    access_control: is_granted('pintushi_organization_view', object)
                switch_organization:
                    action: view
                    path: /switch-organization/{id}
                    controller: Pintushi\Bundle\SecurityBundle\Controller\SwitchOrganizationAction
                    access_control: is_granted('pintushi_organization_switch', object)
                get_profile:
                    action: view
                    path: '/organization/profile'
                    resource_provider: "expr:service('pintushi_security.token_accessor').getOrganization()"
                update_profile:
                    action: update
                    path: '/organization/profile'
                    resource_provider: "expr:service('pintushi_security.token_accessor').getOrganization()"
                    access_control: is_granted('pintushi_organization_update_profile', object)
